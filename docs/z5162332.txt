Week 1
Tuesday   - Group formed during first lab. We spent most of the lab throwing possible project ideas around while setting up Jira and checking everyone was set up. Madhav was established as the SCRUM master. Continued discussing for a few hours after the lab finished and decided on a project - an audio editor. We also decided on a web app, probably using a MERN stack, alongside the WebAudio API. We decided to have meetings every Friday at 2:30pm, planning to use the upcoming Friday to write up and send the preproposal.
Friday    - We completed the initial preproposal, as well as a template we can use for the report delivarables. The preproposal was emailed to Rachid. We plan to start the proposal in the next meeting, assuming approval of the project.

Week 2
Monday    - We had an impromptu meeting to discuss Rachid's feedback on our preproposal, and to review it before resending it.
Tuesday   - Approval was given to the revised preproposal during the lab. We continued discussion on the proposal plans, and wrote up a basic background description together. Due to sleep deprivation, we left the remainder to the meeting.
Wednesday - I quickly set up the GitHub repo for our project.
Friday    - We completed the user stories with acceptance criteria, and agreed to finish them off through the weekend/next week.

Week 3
Tuesday   - We finalised the user stories after the lab. Since Jira doesn't allow you to reset the counter for user stories, we decided to leave adding them to Jira until we were completely sure. Since Madhav wasn't available and missed the lab, we left the story points until later.
Friday    - We made some last changes to the user stories and added them to Jira. We created a table mapping objectives to user stories, and made tentative sprints. The first sprint was set to end the weekend before the first progressive demo, and includes all of the high priority user stories.
Sunday    - We completed the proposal and submitted it. I specifically transferred the interface diagrams to TikZ, proofread the document, and helped write the comparison to current web apps.

Week 4
Monday    - Rajiv and I did some config testing for MongoDB, and ExpressJS.
Friday    - We succeeded in getting uploading and play/stop working. We also discussed how we planned to get splicing to work, as the WebAudio API makes seeking and dynamic adjustment difficult, when using OfflineAudioContexts.
Sunday    - We added pitch and playback speed using SoundTouch and native audio elements respectively. I refactored the main bulk of code in the editor GUI to its own module, AudioStack, handling setting up the audio graphs for modulation. I also added some basic code using RecorderJS for saving files for download, though not completely functional.

Week 5
Tuesday   - We completed recording using OfflineAudioContext in place of RecorderJS, and set up Vorbis (OGG), LAME (MP3), and WAV encoding libraries. Separate tracks were refactored into their own instances, so recording now resolves each, and merges the buffers into one, before handling mono/stereo channeling and encoding. We also set up splicing and seeking, but our current implementation requires a fair bit of work, and will likely need to be changed to make use of audio worklets, to ensure seemless transitions with SoundTouchJS. We also completed the progressive demo.
Friday    - We had our team retrospective; we wrote it up as a draft while discussing the main points, and agreed we had a few points we needed to work on for the future.

Week 6

Week 7
Sunday    - I started working on integrating the SoundTouch library with the worklet node Rajiv started, but made little progress.

Week 8
Monday    - I completed integrating the worklet at a basic level, and added cut integration so the cuts are now managed at the worklet level, instead of by another process. This has the benefit or ensuring downloading has the same quality as streaming (since during download the frames are processeed fast enough that the overhead of reconnecting the cut data causes a delay)
Tuesday   - I completed a very basic cut bar alongside Madhav. A lot need to be integrated, but the functionality is there. It will need to be improved.
Sunday    - I finished implementing seek and integrating some of the features into the cut bar better. I hope to get most of the functions like seek, cut, etc integrated into the canvas itself, but it may be difficult.

Week 9
Friday    - With other assignments starting to be due, I have had little free time to work on the project. I did some basic refactoring and discussed how we wanted to implement the cut bar with Rui, specifically with regards to UI design. We hope to have some way to adjust cuts after thay have been made, and to select interactively, rather than via a text box as it is currently.
Sunday    - I worked on getting the cut bar to visualise the wave form alongside the actual cuts, without having to do large calculations every time something changes. I decided to reduce the visualisation's resolution in favour of speed, only sampling 10 points per pixel (instead of thousands). This ended up being enough to avoid freezing or laging due to the visualisation.

Week 10
Monday    - I spent most of today working on getting markers to work properly. I used the ::before and ::after pseudo-elements to avoid the visualised lines affecting mouse interaction, and overall formatting of the page.
Tuesday   - Again I spent a lot of time getting the cut bar to work, but it finally paid off, and we have an interactive cut bar. Markers work properly and can't be moved beyond the ends, they update when the tempo changes, etc.
